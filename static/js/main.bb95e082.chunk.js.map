{"version":3,"sources":["config/index.js","components/PokemonCard.js","containers/Pokedex.js","components/AppNavigator.js","redux/action.js","containers/PokemonDetails.js","redux/reducer.js","redux/store.js","containers/favourites.js","App.js","index.js"],"names":["POKEMON_API_URL","useStyles","makeStyles","theme","card","cursor","backgroundColor","color","cardMedia","margin","width","height","cardContent","textAlign","link","textDecoration","PokemonCard","props","classes","pokemon","image","id","name","Grid","item","xs","sm","to","className","Card","CardMedia","CardContent","Typography","PokedexContainer","padding","Pokedex","useState","pokemonData","setPokemonData","useEffect","axios","get","then","response","status","results","data","newPokemonData","forEach","index","pokemonObject","url","push","Box","container","spacing","map","CircularProgress","style","marginTop","AppBar","title","AppNavigator","postion","Toolbar","variant","marginLeft","TOGGLE_FAVOURITE","PokemonDetails","state","match","this","params","setState","found","favourites","p","sprites","weight","types","console","log","pokedexContainer","textTitle","pokemonImage","src","front_default","pokemonInfoContainer","seperator","md","Button","favourite","onClick","toggleFavourite","favouriteChecker","fontSize","text","pokemonType","type","Component","withStyles","borderRadius","paddingTop","textTransform","FontFace","bottom","position","connect","dispatch","payload","initialData","pokemonReducer","action","pokemonFromFavourite","find","favPokemon","filter","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","store","createStore","persistor","persistStore","Favourites","App","loading","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb95e082.chunk.js","sourcesContent":["export const POKEMON_API_URL = \"https://pokeapi.co/api/v2/pokemon\"\r\nexport const IMAGE_API_URL = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\"","import { Card, CardContent, CardMedia, Grid, makeStyles, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        cursor: 'pointer',\r\n        backgroundColor: 'black',\r\n        color: 'green',\r\n        \"&:hover\": {\r\n            backgroundColor: \"rgb(34, 34 , 34)\",\r\n        },\r\n    },\r\n    cardMedia: {\r\n        margin: \"auto\",\r\n        width: 130,\r\n        height: 130,\r\n    },\r\n    cardContent: {\r\n        textAlign: \"center\"\r\n    },\r\n    link: {\r\n        textDecoration: \"none\"\r\n    }\r\n}));\r\n\r\nexport default function PokemonCard(props) {\r\n    const classes = useStyles();\r\n    const { pokemon, image } = props\r\n    const { id, name} = pokemon\r\n  return (\r\n    <Grid item xs={12} sm={2} key={id}>\r\n        <Link to={\"/pokemon/\" + id} className={classes.link}>\r\n        <Card className={classes.card}>\r\n            <CardMedia className={classes.cardMedia} image={image}></CardMedia>\r\n            <CardContent className={classes.cardContent}>\r\n                <Typography>\r\n                 ♾️ {name} ♾️ \r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n        </Link>\r\n\r\n    </Grid>\r\n  )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Box, CircularProgress, Grid, makeStyles } from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport { IMAGE_API_URL, POKEMON_API_URL } from '../config'\r\nimport PokemonCard from '../components/PokemonCard'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n     PokedexContainer: {\r\n         textAlign: 'center',\r\n         padding: \"70px 10px 0px 10px\",\r\n         backgroundColor: 'rgb(68, 68, 68)'\r\n     }\r\n}))\r\n\r\nexport default function Pokedex() {\r\n    const classes = useStyles();\r\n    const [pokemonData, setPokemonData] = useState(null)\r\n    useEffect(() => {\r\n        axios.get(POKEMON_API_URL + \"?limit=800\").then((response) => {\r\n            if (response.status >= 200 && response.status < 300) {\r\n                const { results } = response.data\r\n                let newPokemonData = []\r\n                results.forEach((pokemon, index) => {\r\n                    index++\r\n                    let pokemonObject = {\r\n                        id: index,\r\n                        url: IMAGE_API_URL + index + \".png\",\r\n                        name: pokemon.name\r\n                    }\r\n                    newPokemonData.push(pokemonObject)\r\n\r\n                });\r\n                setPokemonData(newPokemonData)\r\n\r\n            }\r\n        })\r\n    }, [])\r\n    return (\r\n        <Box>\r\n            {pokemonData ? \r\n            <Grid className={classes.PokedexContainer} container spacing={2}>\r\n                {pokemonData.map((pokemon) => {\r\n                   return (\r\n                       <PokemonCard  pokemon={pokemon} image={pokemon.url} key={pokemon.id}/>\r\n                   )\r\n                })}\r\n\r\n            </Grid>\r\n            :\r\n             <CircularProgress style={{ marginTop: 100 }}/>}\r\n        </Box>\r\n    )\r\n}","import React from 'react'\r\nimport { AppBar, Toolbar, Typography } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    AppBar: {\r\n        backgroundColor: 'green'\r\n    },\r\n    link: {\r\n        textDecoration: 'none'\r\n    },\r\n    title: {\r\n        cursor: 'pointer',\r\n        color: 'black'\r\n    }\r\n}))\r\nexport default function AppNavigator() {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <AppBar className={classes.AppBar} postion=\"fixed\">\r\n            <Toolbar>\r\n                <Link to='/' className={classes.link}>\r\n                    <Typography className={classes.title} variant=\"h6\">Pokedex</Typography>\r\n                </Link>\r\n                <Link to='/favourites' className={classes.link}>\r\n                    <Typography className={classes.title} variant=\"h6\" style={{ marginLeft: 15 }}>Favourites</Typography>,\r\n                </Link>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}","export const TOGGLE_FAVOURITE = \"TOGGLE_FAVOURITE\"\r\n\r\nexport const toggleFavourite = (pokemon) => ({\r\n    type: TOGGLE_FAVOURITE,\r\n    payload: pokemon\r\n}) ","import { Box, Button, CircularProgress, Grid, Typography, withStyles } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { POKEMON_API_URL } from \"../config\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleFavourite } from \"../redux/action\";\r\n\r\nconst styles = (theme) => ({\r\n    pokedexContainer: {\r\n        height: '80vh',\r\n        backgroundColor: ' black',\r\n        color: \"green\",\r\n        marginTop: 75,\r\n        textAlign: \"center\",\r\n        borderRadius: 5,\r\n        paddingTop: 30\r\n    },\r\n    textTitle: {\r\n        textTransform: \"upperCase\",\r\n        FontFace: 'Sans-serif'\r\n    },\r\n    pokemonImage: {\r\n        width: \"170px\",\r\n        height: \" 170px\",\r\n        backgroundColor: 'black'\r\n    },\r\n    pokemonInfoContainer: {\r\n        bottom: 60,\r\n        position: \"absolute\",\r\n        width: \"98.7%\"\r\n    },\r\n    seperator: {\r\n        height: \"0.0.1mm\",\r\n        width: \"95%\",\r\n    },\r\n    favourite: {\r\n        height: 50,\r\n        width: 50,\r\n        marginTop: 15\r\n    },\r\n    text: {\r\n        fontSize: 30,\r\n    }\r\n});\r\n\r\nclass PokemonDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pokemon: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { match } = this.props;\r\n        const { id } = match?.params;\r\n        axios.get(POKEMON_API_URL + \"/\" + id).then((response) => {\r\n            if (response.status >= 200 && response.status < 300) {\r\n                this.setState({ pokemon: response.data });\r\n            }\r\n        });\r\n    }\r\n\r\n    favouriteChecker(pokemon) {\r\n        let found = false\r\n        this.props.favourites?.map((p) => {\r\n            if(p.id === pokemon.id) {\r\n                found = true\r\n            }\r\n        })\r\n        return found\r\n    }\r\n    render() {\r\n        \r\n        const { classes } = this.props\r\n        const { pokemon } = this.state\r\n        if (pokemon) {\r\n            const { name, sprites, height, weight, types } = pokemon\r\n            console.log(sprites)\r\n            return (\r\n                <Box>\r\n                    <Box className={classes.pokedexContainer}>\r\n                        <Typography className={classes.textTitle} variant=\"h1\">\r\n                            {name}\r\n                        </Typography>\r\n                        <img className={classes.pokemonImage} src={sprites.front_default} />\r\n                        <Box className={classes.pokemonInfoContainer}>\r\n                            <hr className={classes.seperator} />\r\n                            <Grid container>\r\n                                <Grid item md={1}>\r\n                                    <Button\r\n                                        className={classes.favourite}\r\n                                        onClick={() => this.props.toggleFavourite(pokemon)}>\r\n                                        <FavoriteIcon style={{ color: this.favouriteChecker(pokemon) ? \"red\" : \"white\", fontSize: 40 }} />\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item md={2}>\r\n                                    <Typography className={classes.text}>\r\n                                        Name\r\n                                        <hr className={classes.seperator} />\r\n                                        {name}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item md={2}>\r\n                                    <Typography className={classes.text}>\r\n                                        Height\r\n                                        <hr className={classes.seperator} />\r\n                                        {height}m\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item md={2}>\r\n                                    <Typography className={classes.text}>\r\n                                        Weight\r\n                                        <hr className={classes.seperator} />\r\n                                        {weight}kg\r\n                                    </Typography>\r\n                                </Grid>\r\n                                {types.map((pokemonType) => {\r\n                                    console.log(pokemonType)\r\n                                    const { name } = pokemonType.type;\r\n                                    return (\r\n                                        <Grid item md={2}>\r\n                                            <Typography className={classes.text}>\r\n                                                Type\r\n                                                <hr className={classes.seperator} />\r\n                                                {name}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    );\r\n                                })}\r\n                            </Grid>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            )\r\n        } else {\r\n            return <CircularProgress />\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n     favourites: state.favourites\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    toggleFavourite: (pokemon) => dispatch(toggleFavourite(pokemon))\r\n})\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(PokemonDetails));","import { TOGGLE_FAVOURITE } from \"./action\";\r\n\r\nconst initialData = {\r\n    favourites: []\r\n}\r\n\r\nconst pokemonReducer = (state = initialData, action) => {\r\n    switch (action.type) {\r\n        case TOGGLE_FAVOURITE:\r\n            let pokemon = action.payload\r\n            let pokemonFromFavourite = state.favourites.find((favPokemon) => pokemon.id === favPokemon.id)\r\n            return {\r\n                ...state,\r\n                favourites: pokemonFromFavourite ?[...state.favourites.filter(\r\n                            (pokemon) => pokemon.id !== pokemonFromFavourite.id\r\n                        ),\r\n                    ]\r\n                    : [...state.favourites, action.payload],\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default pokemonReducer","import { createStore } from 'redux'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\r\n\r\nimport rootReducer from './reducer'\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\nexport let store = createStore(persistedReducer)\r\nexport let persistor = persistStore(store)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Box,Grid,withStyles} from '@material-ui/core';\r\nimport PokemonCard from '../components/PokemonCard';\r\n\r\n\r\nconst styles=(theme)=>({\r\n    pokedexContainer:{\r\n        height:\"100vh\",\r\n        backgroundColor:\"rgb(68,68,68)\",\r\n        paddingTop: 80,\r\n        textAlign:\"center\"\r\n\r\n    }\r\n})\r\n\r\n export class Favourites extends Component {\r\n     render() {\r\n        const {classes,favourites} = this.props\r\n        return (\r\n            <Box>\r\n                <Grid  container spacing={2} className={classes.pokedexContainer}>\r\n                    {favourites.map((pokemon)=>{\r\n                        return (\r\n                            <PokemonCard pokemon={pokemon} key={pokemon.id} image ={pokemon.sprites.front_default}/>\r\n                        )\r\n                    })}\r\n                </Grid>\r\n            </Box>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps=(state)=> ({\r\n    favourites: state.favourites\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch)=> ({\r\n\r\n})\r\n\r\n\r\nexport default  withStyles(styles)(connect(mapStateToProps,mapDispatchToProps)(Favourites));","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Pokedex from './containers/Pokedex'\nimport AppNavigator from './components/AppNavigator'\nimport PokemonDetails from './containers/PokemonDetails'\nimport { Provider } from 'react-redux'\nimport { persistor, store } from './redux/store'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport Favourites from './containers/favourites'\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <Router>\n          <AppNavigator />\n          <Route exact path=\"/\" component={Pokedex} />\n          <Route exact path=\"/pokemon/:id\" component={PokemonDetails} />\n          <Route exact path=\"/favourites\" component={Favourites} />\n        </Router>\n      </PersistGate>\n    </Provider>\n\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}